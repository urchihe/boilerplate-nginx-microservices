services:
  web:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    environment:
      - NGINX_HOST=host.docker.internal
    volumes:
      - ./user-service:/var/www/html/user-service
      - ./notification-service:/var/www/html/notification-service
    depends_on:
      - user-service
      - notification-service
    labels:
      - traefik.enable=true
      - traefik.http.routers.web.rule=Host(`${USER_DOMAIN}`,`${NOTIFICATION_DOMAIN}`)
      - traefik.http.services.web.loadbalancer.server.port=80
    networks:
      default:
        aliases:
          - user-service
          - notification-service

  user-service:
    build:
      context: .
      dockerfile: user-service/Dockerfile-php
    volumes:
      - ./user-service:/var/www/html/user-service
    environment:
      - COMPOSER_ALLOW_SUPERUSER=1
      - DATABASE_URL=mysql://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@mysql:3306/${USER_DATABASE_NAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_NAME=${USER_DATABASE_NAME}
      - TEST_DRIVER=${TEST_DRIVER}
      - FIREBASE_API_KEY=${FIREBASE_API_KEY}
      - FIREBASE_AUTH_DOMAIN=${FIREBASE_AUTH_DOMAIN}
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
      - FIREBASE_STORAGE_BUCKET=${FIREBASE_STORAGE_BUCKET}
      - FIREBASE_MESSAGING_SENDER_ID=${FIREBASE_MESSAGING_SENDER_ID}
      - FIREBASE_APP_ID=${FIREBASE_APP_ID}
      - FIREBASE_MEASUREMENT_ID=${FIREBASE_MEASUREMENT_ID}
    depends_on:
      - mysql
    hostname: user-service

  notification-service:
    build:
      context: .
      dockerfile: notification-service/Dockerfile-php
    volumes:
      - ./notification-service:/var/www/html/notification-service
    environment:
      - COMPOSER_ALLOW_SUPERUSER=1
      - DATABASE_URL=mysql://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@mysql:3306/${NOTIFICATION_DATABASE_NAME}
    depends_on:
      - user-service
      - mysql
    hostname: notification-service

  mysql:
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      - ./mysql:/var/lib/mysql
      - ./commands/01.sql:/docker-entrypoint-initdb.d/commands/01.sql
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
      MYSQL_DATABASE: ${USER_DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
    labels:
      - traefik.enable=true
      - traefik.http.routers.phpmyadmin.rule=Host(`pma.nextbaskettech.localhost`)
      - traefik.http.services.phpmyadmin.loadbalancer.server.port=80

  rabbitmq:
    image: rabbitmq:latest
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - "5672:5672"
      - "15672:15672"
    labels:
      - traefik.enable=true
      - traefik.http.routers.rabbitmq.rule=Host(`rabbitmq.nextbaskettech.localhost`)
      - traefik.http.services.rabbitmq.loadbalancer.server.port=15672

  traefik:
    image: "traefik:v2.4"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

volumes:
  mysql: